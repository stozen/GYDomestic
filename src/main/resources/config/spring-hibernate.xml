<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:aop="http://www.springframework.org/schema/aop"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xsi:schemaLocation="http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
 http://www.springframework.org/schema/tx 
 http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
 http://www.springframework.org/schema/aop 
 http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-4.3.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd"
 >
 	<!-- 使用属性文件来配置数据源,配置单个属性文件 -->
<!-- 	<bean id="configBean" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:config/database/mysql.properties</value>
		</property>
	</bean> -->
	
	<!-- 如果想配置多个属性文件 -->
	<bean id="configBean" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/database/mysql.properties</value>
				<value>classpath:config/database/oracle.properties</value>
				<value>classpath:config/database/sqlserver.properties</value>
				<value>classpath:config/database/cache/mongodb.properties</value>
				<value>classpath:config/log4j/log4j.properties</value>
			</list>
		</property>
	</bean>
	 
 	<!-- <context:property-placeholder location="classpath*:config/database/mysql.properties"/> -->
 	
 	<!-- 配置数据源 -->
 	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	 	<property name="driverClass">
	 		<value>${mysql.driverClass}</value>
	 	</property>
	 	<property name="jdbcUrl">
	 		<value>${mysql.url}</value>
	 	</property>
	 	<property name="user">
	 		<value>${mysql.username}</value>
	 	</property>
	 	<property name="password">
	 		<value>${mysql.password}</value>
	 	</property>                                              
	</bean>
	
	<!-- 配置Hibernate SessionFactry -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>

		<property name="configLocations">
			<list>
				<value>
					classpath*:config/hibernate/hibernate.cfg.xml
				</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置事务代理类 -->
	<bean id="transactionBese" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" lazy-init="true" abstract="true">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				 <prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				 <prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				 <prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>
				 <prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
				 <prop key="query*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property> 
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 配置UserDaoImpl实现类 -->
 	<bean id="userDao" class="com.gy.daoImpl.UserDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
 	
 	<!-- 配置UserServiceImpl实现类 -->
 	<bean id="userServiceBase" class="com.gy.servicesImpl.UserServiceImpl">
 		<property name="userDao" ref="userDao"></property>
 	</bean>
 	
 	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="userService" parent="transactionBese"> 
    	<property name="target" ref="userServiceBase"></property> 
	</bean>
	
	<!-- 配置AccountDaoImpl实现类 -->
 	<bean id="accountDao" class="com.gy.daoImpl.AccountDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
 	
 	<!-- 配置AccountServiceImpl实现类 -->
 	<bean id="accountServiceBase" class="com.gy.servicesImpl.AccountServiceImpl">
 		<property name="accountDao" ref="accountDao"></property>
 	</bean>
 	
 	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="accountService" parent="transactionBese"> 
    	<property name="target" ref="accountServiceBase"></property> 
	</bean>  
 	
 	<!-- 配置GameDaoImpl实现类 -->
 	<bean id="gameDao" class="com.gy.daoImpl.GameDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
 	
 	<!-- 配置GameServiceImpl实现类 -->
 	<bean id="gameServiceBase" class="com.gy.servicesImpl.GameServiceImpl">
 		<property name="gameDao" ref="gameDao"></property>
 	</bean>
 	
 	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="gameService" parent="transactionBese"> 
    	<property name="target" ref="gameServiceBase"></property> 
	</bean>
 	
 	<!-- 配置OrderDaoImpl实现类 -->
 	<bean id="orderDao" class="com.gy.daoImpl.OrderDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
 	
 	<!-- 配置OrderServiceImpl实现类 -->
 	<bean id="orderServiceBase" class="com.gy.servicesImpl.OrderServiceImpl">
 		<property name="orderDao" ref="orderDao"></property>
 	</bean>
 	
 	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="orderService" parent="transactionBese"> 
    	<property name="target" ref="orderServiceBase"></property> 
	</bean>
 	
 	<!-- 配置GoodsDaoImpl实现类 -->
 	<bean id="goodsDao" class="com.gy.daoImpl.GoodsDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
 	
 	<!-- 配置GoodsServiceImpl实现类 -->
 	<bean id="goodsServiceBase" class="com.gy.servicesImpl.GoodsServiceImpl">
 		<property name="goodsDao" ref="goodsDao"></property>
 	</bean>
 	
 	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="goodsService" parent="transactionBese"> 
    	<property name="target" ref="goodsServiceBase"></property> 
	</bean>
	
	<!-- 配置OrderGoodsDaoImpl实现类 -->
 	<bean id="orderGoodsDao" class="com.gy.daoImpl.OrderGoodsDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
	
	<!-- 配置OrderGoodsServiceImpl实现类 -->
 	<bean id="orderGoodsServiceBase" class="com.gy.servicesImpl.OrderGoodsServiceImpl">
 		<property name="orderGoodsDao" ref="orderGoodsDao"></property>
 	</bean>
	
	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="orderGoodsService" parent="transactionBese"> 
    	<property name="target" ref="orderGoodsServiceBase"></property> 
	</bean>
	
	<!-- 配置VerificationCodeDaoImpl实现类 -->
 	<bean id="verificationCodeDao" class="com.gy.daoImpl.VerificationCodeDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
	
	<!-- 配置VerificationCodeServiceImpl实现类 -->
 	<bean id="verificationCodeServiceBase" class="com.gy.servicesImpl.VerificationCodeServiceImpl">
 		<property name="verificationCodeDao" ref="verificationCodeDao"></property>
 	</bean>
	
	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="verificationCodeService" parent="transactionBese"> 
    	<property name="target" ref="verificationCodeServiceBase"></property> 
	</bean>
	
	<!-- 配置tokenDaoImpl实现类 -->
 	<bean id="tokenDao" class="com.gy.daoImpl.TokenDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
	
	<!-- 配置tokenServiceImpl实现类 -->
 	<bean id="tokenServiceBase" class="com.gy.servicesImpl.TokenServiceImpl">
 		<property name="tokenDao" ref="tokenDao"></property>
 	</bean>
	
	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="tokenService" parent="transactionBese"> 
    	<property name="target" ref="tokenServiceBase"></property> 
	</bean>
	
	<!-- 配置payRecordDaoImpl实现类 -->
 	<bean id="payRecordDao" class="com.gy.daoImpl.PayRecordDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
	
	<!-- 配置payRecordServiceImpl实现类 -->
 	<bean id="payRecordServiceBase" class="com.gy.servicesImpl.PayRecordServiceImpl">
 		<property name="payRecordDao" ref="payRecordDao"></property>
 	</bean>
	
	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="payRecordService" parent="transactionBese"> 
    	<property name="target" ref="payRecordServiceBase"></property> 
	</bean>
	
	<!-- 配置AliPayConfigDaoImpl实现类 -->
 	<bean id="aliPayConfigDao" class="com.gy.daoImpl.AliPayConfigDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
	
	<!-- 配置AliPayConfigServiceImpl实现类 -->
 	<bean id="aliPayConfigServiceBase" class="com.gy.servicesImpl.AliPayConfigServiceImpl">
 		<property name="aliPayConfigDao" ref="aliPayConfigDao"></property>
 	</bean>
	
	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="aliPayConfigService" parent="transactionBese"> 
    	<property name="target" ref="aliPayConfigServiceBase"></property> 
	</bean>
	
	<!-- 配置WeixinAliPayConfigDaoImpl实现类 -->
 	<bean id="weixinPayConfigDao" class="com.gy.daoImpl.WeixinPayConfigDaoImpl">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
	
	<!-- 配置WeixinConfigServiceImpl实现类 -->
 	<bean id="weixinPayConfigServiceBase" class="com.gy.servicesImpl.WeixinPayConfigServiceImpl">
 		<property name="weixinPayConfigDao" ref="weixinPayConfigDao"></property>
 	</bean>
	
	<!-- parent为transactionBese，表示支持事务 -->
 	<bean id="weixinPayConfigService" parent="transactionBese"> 
    	<property name="target" ref="weixinPayConfigServiceBase"></property> 
	</bean>
 </beans>